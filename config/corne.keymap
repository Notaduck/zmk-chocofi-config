#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/bt.h>


#include "keys/36.h"

// global
#define QUICK_TAP_MS 175

// layers
#define BASE 0
#define NUM 1
#define SYM 2
#define FN 3
#define NAV 4

// redefined keycodes
#define _LWIN_    &kp LEFT_WIN
#define _RALT_    &kp RIGHT_ALT
#define _SPC_     &kp SPACE
#define _RET_     &kp RETURN 
#define _CUT_     &kp C_AC_CUT
#define _PASTE_     &kp C_AC_PASTE
#define _COPY_     &kp C_AC_COPY

#define _MO_NUM_ &mo NUMBER

#define OUTTOG   &out OUT_TOG // toggle keyboard output bluetooth/usb
#define ___      &trans      //  transparent
#define _x_      &none





/ {
  chosen {
    zmk,matrix_transform = &five_column_transform;
  };
};
/ {
  behaviors {
    hm: homerow_mods {
      compatible = "zmk,behavior-hold-tap";
      flavor = "balanced";
      tapping-term-ms = <280>;
      quick-tap-ms = <QUICK_TAP_MS>; 
      bindings = <&kp>, <&kp>;
      // label = "HOMEROW_MODS";
      #binding-cells = <2>;
      // hold-trigger-key-positions = <TRIGGER_POS>;
      hold-trigger-on-release;

    };
    SBD: S_BSPC_DEL {
         compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp BSPC>, <&kp DEL>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
    };
  };
};

/ {
  keymap {
    compatible = "zmk,keymap";
    base_layer { 
      bindings = <
        // ╭───────────────────────────────────────────────────────────╮   ╭───────────────────────────────────────────────────────────╮
        // │     Q     │     W     │     E     │    R      │     T     │   │     Y     │     U    YM │     I     │     O     │     P     │
              &lt FN Q       &kp W       &kp E      &kp R        &kp T           &kp Y       &kp U       &kp I       &kp O       &kp P
        // ├───────────┼───────────┼───────────┼───────────┼───────────┤   ├───────────┼───────────┼───────────┼───────────┼───────────┤
        // │     A     │     S     │     D     │     F     │     G     │   │     H     │     J     │     K     │     L     │     '     │
            &hm LSHIFT A  &hm LCTRL S  &hm LALT D  &hm LGUI F  &lt NUM G      &kp H     &hm RGUI J   &hm RALT K    &hm RCTRL L   &hm RSHIFT SEMI           
        // ├───────────┼───────────┼───────────┼───────────┼───────────┤   ├───────────┼───────────┼───────────┼───────────┼───────────┤
        // │     Z     │     X     │     C     │     V     │     B     │   │     N     │     M     │    ,/;    │    ./:    │     /     │
               &kp Z       &kp X       &kp C       &kp V       &kp B           &kp N       &kp M     &kp COMMA     &kp DOT      &kp FSLH
        // ╰───────────┼───────────┼───────────┼───────────┼───────────╯   ╰───────────┼───────────┼───────────┼───────────┼───────────╯
                                        _x_     &lt NAV TAB   &kp SPACE        _RET_    &lt SYM ESC    &SBD 
        //                         │                                   │   │                                   │
        //                         ╰───────────────────────────────────╯   ╰───────────────────────────────────╯
      >;
    };
    number_layer { 
      bindings = <
        // ╭───────────────────────────────────────────────────────────╮   ╭───────────────────────────────────────────────────────────╮
        // │     _     │     _     │     _     │     _     │     _     │   │     _     │     _     │     _     │     _     │     _     │
                _x_         _x_         _x_         _x_         _x_             ___        &kp N7       &kp N8       &kp N9        _x_
        // ├───────────┼───────────┼───────────┼───────────┼───────────┤   ├───────────┼───────────┼───────────┼───────────┼───────────┤
        // │     _     │     _     │     _     │     _     │     _     │   │     _     │     _     │     _     │     _     │     _     │
                _x_         _x_         _x_         _x_         _x_             ___        &kp N4       &kp N5       &kp N6        _x_
        // ├───────────┼───────────┼───────────┼───────────┼───────────┤   ├───────────┼───────────┼───────────┼───────────┼───────────┤
        // │     _     │     _     │     _     │     _     │     _     │   │     _     │     _     │     _     │     _     │     _     │
                _x_         _x_         _x_         _x_         _x_            &kp N0       &kp N1       &kp N2       &kp N3        _x_
        // ╰───────────┼───────────┼───────────┼───────────┼───────────╯   ╰───────────┼───────────┼───────────┼───────────┼───────────╯
                                        _x_         _x_         ___             ___         ___         ___ 
        //                         │                                   │   │                                   │
        //                         ╰───────────────────────────────────╯   ╰───────────────────────────────────╯
      >;
    };
    symbol_layer { 
      bindings = <
        // ╭───────────────────────────────────────────────────────────╮   ╭───────────────────────────────────────────────────────────╮
        // │     _     │     _     │     _     │     _     │     _     │   │     _     │     _     │     _     │     _     │     _     │
              &kp EXCL     &kp AT     &kp HASH    &kp DLLR   &kp PRCNT       ___ &kp CARET    &kp AMPS    &kp STAR             &kp NUBS 
        // ├───────────┼───────────┼───────────┼───────────┼───────────┤   ├───────────┼───────────┼───────────┼───────────┼───────────┤
        // │     _     │     _     │     _     │     _     │     _     │   │     _     │     _     │     _     │     _     │     _     │
                _x_         _x_         _x_         _x_         _x_           ___ &kp EQUAL   &kp LPAR   &kp RPAR              &kp APOS
        // ├───────────┼───────────┼───────────┼───────────┼───────────┤   ├───────────┼───────────┼───────────┼───────────┼───────────┤
        // │     _     │     _     │     _     │     _     │     _     │   │     _     │ {, <S>[   │  {, <S>[  │     _     │     _     │
                _x_         _x_         _x_         _x_         _x_          ___ &kp MINUS    &kp LBKT     &kp RBKT              &kp GRAVE 
        // ╰───────────┼───────────┼───────────┼───────────┼───────────╯   ╰───────────┼───────────┼───────────┼───────────┼───────────╯
                                        _x_         _x_         _x_             _x_         _x_         _x_ 
        //                         │                                   │   │                                   │
        //                         ╰───────────────────────────────────╯   ╰───────────────────────────────────╯
      >;
    };

    fn { 
      bindings = <
        // ╭───────────────────────────────────────────────────────────╮   ╭───────────────────────────────────────────────────────────╮
        // │     _     │     _     │     _     │     _     │     _     │   │     _     │     _     │     _     │     _     │     _     │
       &sl BASE     &out OUT_USB &out OUT_BLE _x_        &bt BT_CLR         &kp F10      &kp F7       &kp F8       &kp F9       _x_
        // ├───────────┼───────────┼───────────┼───────────┼───────────┤   ├───────────┼───────────┼───────────┼───────────┼───────────┤
        // │     _     │     _     │     _     │     _     │     _     │   │     _     │     _     │     _     │     _     │     _     │
       &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4       &kp F11      &kp F4       &kp F5       &kp F6     _x_ 
        // ├───────────┼───────────┼───────────┼───────────┼───────────┤   ├───────────┼───────────┼───────────┼───────────┼───────────┤
        // │     _     │     _     │     _     │     _     │     _     │   │     _     │           │           │     _     │     _     │
             &bootloader    _x_         _x_         _x_        _x_            &kp F12      &kp F1       &kp F2     &kp F3       _x_ 
        // ╰───────────┼───────────┼───────────┼───────────┼───────────╯   ╰───────────┼───────────┼───────────┼───────────┼───────────╯
                                        ___         ___         ___             ___         ___         ___ 
        //                         │                                   │   │                                   │
        //                         ╰───────────────────────────────────╯   ╰───────────────────────────────────╯
      >;
    };
    navigation_layer { 
      bindings = <
        // ╭───────────────────────────────────────────────────────────╮   ╭───────────────────────────────────────────────────────────╮
        // │     _     │     _     │     _     │     _     │     _     │   │     _     │     _     │     _     │     _     │     _     │
                _x_         _x_         _x_         _x_         _x_             _x_         _x_         _x_         _x_       &kp BSPC
        // ├───────────┼───────────┼───────────┼───────────┼───────────┤   ├───────────┼───────────┼───────────┼───────────┼───────────┤
        // │     _     │     _     │     _     │     _     │     _     │   │     _     │     _     │     _     │     _     │     _     │
                _x_         _x_         _x_         _x_         _x_           &kp LEFT    &kp DOWN     &kp UP    &kp RIGHT      _x_
        // ├───────────┼───────────┼───────────┼───────────┼───────────┤   ├───────────┼───────────┼───────────┼───────────┼───────────┤
        // │     _     │     _     │     _     │     _     │     _     │   │     _     │     _     │     _     │     _     │     _     │
                           
                _x_         _CUT_      _COPY_     _PASTE_       _x_             _x_         _x_         _x_         _x_         _x_
        // ╰───────────┼───────────┼───────────┼───────────┼───────────╯   ╰───────────┼───────────┼───────────┼───────────┼───────────╯
                                        _x_         _x_         ___             ___         ___         ___
        //                         │                                   │   │                                   │
        //                         ╰───────────────────────────────────╯   ╰───────────────────────────────────╯
      >;
    };
  };
};

//                                  Template for new layers all keys are transparent
//      ╭───────────────────────────────────────────────────────────╮   ╭───────────────────────────────────────────────────────────╮
//      │     _     │     _     │     _     │     _     │     _     │   │     _     │     _     │     _     │     _     │     _     │
//           ___          ___         ___         ___         ___             ___         ___         ___         ___         ___     
//      ├───────────┼───────────┼───────────┼───────────┼───────────┤   ├───────────┼───────────┼───────────┼───────────┼───────────┤
//      │     _     │     _     │     _     │     _     │     _     │   │     _     │     _     │     _     │     _     │     _     │
//           ___         ___         ___         ___         ___             ___         ___         ___         ___         ___     
//      ├───────────┼───────────┼───────────┼───────────┼───────────┤   ├───────────┼───────────┼───────────┼───────────┼───────────┤
//      │     _     │     _     │     _     │     _     │     _     │   │     _     │     _     │     _     │     _     │     _     │
//           ___         ___         ___         ___         ___             ___         ___         ___         ___         ___     
//      ╰───────────┼───────────┼───────────┼───────────┼───────────╯   ╰───────────┼───────────┼───────────┼───────────┼───────────╯
//                                   ___         ___         ___            ___         ___         ___
//                              │                                   │   │                                   │
//                              ╰───────────────────────────────────╯   ╰───────────────────────────────────╯
//



// vim:ft=cpp
